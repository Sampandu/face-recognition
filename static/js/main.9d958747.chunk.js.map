{"version":3,"sources":["components/Logo/face.png","components/Navigation/Navigation.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageURLForm/ImageURLForm.js","components/FaceRecognitionBox/FaceRecognitionBox.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignin","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","defineProperty","target","name","value","onSigninSubmit","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","data","id","loadUser","catch","err","console","log","htmlFor","onChange","type","Component","Register","onRegisterSubmit","Logo","tilt_default","options","max","height","width","alt","src","face","Rank","user","concat","submition","ImageURLForm","onButtonSubmit","FaceRecognitionBox","imageUrl","faceBoxes","map","faceBox","idx","key","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesConfig","particles","number","density","enable","value_area","initialState","input","route","join","App","calculateFaceLocation","faceDetection","outputs","regions","inputImage","document","getElementById","Number","length","detectedFaces","i","faceCoordinate","region_info","bounding_box","left_col","top_row","right_col","bottom_row","push","displayFaceBoxes","boxes","assign","_this$state","particles_default","params","components_Navigation_Navigation","components_Logo_Logo","components_Rank_Rank","components_ImageURLForm_ImageURLForm","components_FaceRecognitionBox_FaceRecognitionBox","components_Signin_Signin","components_Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d958747.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.42e95c95.png\";","import React from 'react'\n\nconst Navigation = ({onRouteChange, isSignin}) => {\n  if (isSignin) {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <p onClick={() => onRouteChange('signin')} className='f3 pa3 link underline black dim pointer'>Sign Out</p>\n      </nav>\n    )\n  } else {\n    return (\n      <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n        <p onClick={() => onRouteChange('signin')} className='f3 pa3 link underline black dim pointer'>Signin</p>\n        <p onClick={() => onRouteChange('register')} className='f3 pa3 link underline black dim pointer'>Register</p>\n      </nav>\n    )\n  }\n}\n\nexport default Navigation\n","import React, { Component } from 'react';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  onInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onSigninSubmit = () => {\n    fetch('https://still-forest-54612.herokuapp.com/signin', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        // data should be stringify\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.id) {\n          this.props.onRouteChange('home');\n          this.props.loadUser(data);\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br2 ba br3 shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80 center\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onInputChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange={this.onInputChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSigninSubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\"\n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p\n                onClick={() => onRouteChange('register')}\n                className=\"f5 link dim black db pointer\"\n              >\n                Register\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Signin;\n","import React, { Component } from 'react';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n    };\n  }\n\n  onInputChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  onRegisterSubmit = () => {\n    fetch('https://still-forest-54612.herokuapp.com/register', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        // data should be stringify\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n      }),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.id) {\n          this.props.loadUser(data);\n          this.props.onRouteChange('home');\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <article className=\"br2 ba br3 shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80 center\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onInputChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onInputChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\n                  Password\n                </label>\n                <input\n                  onChange={this.onInputChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onRegisterSubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\"\n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;\n","import React from 'react'\nimport Tilt from 'react-tilt'\nimport './Logo.css'\nimport face from './face.png'\n\nconst Logo = () => {\n  return (\n    <div className='ma4 mt0'>\n      <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 45 }} style={{ height: 150, width: 150 }}>\n        <div className=\"Tilt-inner\">\n          <img alt='Logo' src={face}/>\n        </div>\n      </Tilt>\n    </div>\n  )\n}\n\nexport default Logo\n","import React from 'react';\n\nconst Rank = ({ user }) => {\n  //if user doesn't signin, app will redirect visitor to the home page.\n  return (\n    <div>\n      {user.id !== '' ? (\n        <div>\n          <div className=\"f3 white\">\n            {`${user.name}, your current rank is ...`}\n          </div>\n          <div className=\"f2 white\">{`${user.submition}`}</div>\n        </div>\n      ) : (\n        <div className=\"f3 white\">Hi, welcome to monkey face recognition</div>\n      )}\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from 'react'\nimport './ImageURLForm.css'\n\nconst ImageURLForm = ({onInputChange, onButtonSubmit}) => {\n  return (\n    <div>\n      <p className='f3'>\n        { 'The monkey will look for faces in your images, give it a shot.' }\n      </p>\n      <div className='center'>\n        <div className='pa4 br3 shadow-3 form center'>\n          <input\n            className='f4 pa2 w-70 br2'\n            type='text'\n            onChange={onInputChange}\n          />\n          <button\n            className='f4 pa2 w-30 br2 grow link ph3 pv2 pointer bg-light-purple dib white'\n            onClick={onButtonSubmit}\n          >Detect</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ImageURLForm\n","import React from 'react'\nimport './FaceRecognitionBox.css'\n\nconst FaceRecognitionBox = ({imageUrl, faceBoxes}) => {\n  return (\n    <div className='center'>\n      <div className='absolute mt3'>\n        <img id='inputImage' alt='' src={imageUrl} width='500px' height='auto' />\n        {\n          faceBoxes.map( (faceBox, idx) => {\n            return (\n              <div key={idx} className='bounding-box' style={{top: faceBox.topRow, right: faceBox.rightCol, bottom: faceBox.bottomRow, left: faceBox.leftCol}}></div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default FaceRecognitionBox\n\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageURLForm from './components/ImageURLForm/ImageURLForm';\nimport FaceRecognitionBox from './components/FaceRecognitionBox/FaceRecognitionBox';\nimport './App.css';\nimport 'tachyons';\n\nconst particlesConfig = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 1000,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  faceBoxes: [],\n  route: 'home',\n  isSignin: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    submition: 0,\n    join: '',\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  onInputChange = event => {\n    this.setState({ input: event.target.value });\n  };\n\n  //calculate the position of the face box in the image\n  calculateFaceLocation = data => {\n    const faceDetection = data.outputs[0].data.regions;\n    const inputImage = document.getElementById('inputImage');\n    const width = Number(inputImage.width);\n    const height = Number(inputImage.height);\n\n    if (faceDetection.length === 0) {\n      return;\n    } else {\n      const detectedFaces = [];\n      for (let i = 0; i < faceDetection.length; i++) {\n        const faceCoordinate = faceDetection[i].region_info.bounding_box;\n        const faceBox = {\n          leftCol: faceCoordinate.left_col * width,\n          topRow: faceCoordinate.top_row * height,\n          rightCol: (1 - faceCoordinate.right_col) * width,\n          bottomRow: (1 - faceCoordinate.bottom_row) * height,\n        };\n        detectedFaces.push(faceBox);\n      }\n      return detectedFaces;\n    }\n  };\n\n  displayFaceBoxes = boxes => {\n    this.setState({ faceBoxes: boxes });\n  };\n\n  //hit the 'imageurl' api in the backend\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch('https://still-forest-54612.herokuapp.com/imageurl', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        input: this.state.input,\n      }),\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://still-forest-54612.herokuapp.com/image', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              id: this.state.user.id,\n            }),\n          })\n            .then(response => response.json())\n            .then(submition =>\n              this.setState({\n                user: Object.assign(this.state.user, { submition }),\n              })\n            )\n            .catch(err => console.log(err));\n        }\n        this.displayFaceBoxes(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.err);\n  };\n\n  //redirect to different page in terms of user's status\n  onRouteChange = route => {\n    if (route === 'home') {\n      this.setState({ isSignin: true });\n    } else if (route === 'signin') {\n      this.setState(initialState);\n    }\n    this.setState({ route });\n  };\n\n  loadUser = data => {\n    this.setState({\n      user: Object.assign(this.state.user, data),\n    });\n  };\n\n  render() {\n    const { route, isSignin, user } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesConfig} />\n        <Navigation onRouteChange={this.onRouteChange} isSignin={isSignin} />\n        {route === 'home' ? (\n          <div>\n            <Logo />\n            <Rank user={user} />\n            <ImageURLForm\n              onInputChange={this.onInputChange}\n              onButtonSubmit={this.onButtonSubmit}\n            />\n            <FaceRecognitionBox\n              imageUrl={this.state.imageUrl}\n              faceBoxes={this.state.faceBoxes}\n            />\n          </div>\n        ) : route === 'signin' ? (\n          <Signin onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        ) : (\n          <Register\n            onRouteChange={this.onRouteChange}\n            loadUser={this.loadUser}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}